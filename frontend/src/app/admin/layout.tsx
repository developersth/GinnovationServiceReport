// src/app/admin/layout.tsx
'use client'; // <-- ‡πÄ‡∏û‡∏¥‡πà‡∏° 'use client' ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÉ‡∏ä‡πâ useRouter ‡πÅ‡∏•‡∏∞ useState/useEffect

import { ReactNode, useState, useEffect } from 'react';
import Link from 'next/link';
import { useRouter } from 'next/navigation'; // Import useRouter
import { MUIThemeProvider } from '../context/MUIThemeContext';
import ThemeMUIToggleButton from '../components/ThemeMUIToggleButton';
import Button from '@mui/material/Button';
import LogoutIcon from '@mui/icons-material/Logout'; // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô Logout
import AccountCircleIcon from '@mui/icons-material/AccountCircle'; // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô User Profile (optional)
import Box from '@mui/material/Box'; // ‡πÄ‡∏û‡∏¥‡πà‡∏° Box ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏ß‡∏≤‡∏á

import { logout, checkAuth } from '../lib/auth'; // Import ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô logout ‡πÅ‡∏•‡∏∞ checkAuth

export default function AdminLayout({ children }: { children: ReactNode }) {
  const router = useRouter();
  const [isAuthenticated, setIsAuthenticated] = useState(false);

  useEffect(() => {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£ Login ‡πÄ‡∏°‡∏∑‡πà‡∏≠ component mount
    setIsAuthenticated(checkAuth());
    // ‡∏´‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô ‡πÉ‡∏´‡πâ redirect ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Login
    if (!checkAuth()) {
      router.push('/login');
    }
  }, [router]); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö router ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤ effect ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ router ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô

  const handleLogout = async () => {
    try {
      await logout();
      setIsAuthenticated(false);
      router.push('/login'); // Redirect ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Login ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å Logout
    } catch (error) {
      console.error('Logout failed:', error);
      // ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á error message ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏£‡∏≤‡∏ö
    }
  };

  // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏≠‡∏¢‡∏π‡πà ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á loading ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà render ‡∏≠‡∏∞‡πÑ‡∏£‡πÄ‡∏•‡∏¢
  if (!isAuthenticated) {
    return (
      <div className="flex items-center justify-center min-h-screen bg-gray-100 dark:bg-gray-900">
        <p>Loading or redirecting to login...</p>
      </div>
    );
  }

  return (
    <MUIThemeProvider>
      <div className="flex min-h-screen">
        {/* Sidebar */}
        <aside className="w-64 bg-gray-800 p-4 space-y-4 text-white"> {/* ‡πÄ‡∏û‡∏¥‡πà‡∏° text-white */}
          <h2 className="text-xl font-bold mb-6">Ginnovation</h2>
          <nav className="space-y-2">
            <Link href="/admin/dashboard" className="block hover:text-blue-400">üè† Dashboard</Link>
            <Link href="/admin/reports" className="block hover:text-blue-400">üìë Reports</Link>
            <Link href="/admin/users" className="block hover:text-blue-400">üë• Users</Link>
            <Link href="/admin/projects" className="block hover:text-blue-400">üìä Projects</Link>
            <Link href="/admin/services" className="block hover:text-blue-400">üõ†Ô∏è Service Reports</Link>
          </nav>
        </aside>

        {/* Content */}
        <div className="flex-1 p-6">
          {/* Topbar */}
          <header className="flex justify-between items-center mb-6">
            <h1 className="text-2xl font-semibold">Dashboard</h1>
            <div className="flex items-center space-x-4">
              <ThemeMUIToggleButton />
              {/* === ‡∏õ‡∏∏‡πà‡∏° Logout ‡πÅ‡∏•‡∏∞ User Profile === */}
              <Button
                variant="outlined"
                color="inherit" // ‡πÉ‡∏ä‡πâ inherit ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡∏ï‡∏≤‡∏° Theme (dark/light)
                startIcon={<AccountCircleIcon />}
                sx={{
                  color: 'inherit', // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏™‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡∏ï‡∏≤‡∏° theme
                  borderColor: 'rgba(255, 255, 255, 0.5)', // ‡∏™‡∏µ border ‡πÉ‡∏ô dark mode
                  '&:hover': {
                    borderColor: 'rgba(255, 255, 255, 0.8)',
                  },
                }}
              >
                Admin
              </Button>
              <Button
                variant="contained"
                color="error" // ‡πÉ‡∏ä‡πâ‡∏™‡∏µ‡πÅ‡∏î‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏° Logout
                startIcon={<LogoutIcon />}
                onClick={handleLogout}
              >
                Logout
              </Button>
              {/* ==================================== */}
            </div>
          </header>

          {children}
        </div>
      </div>
    </MUIThemeProvider>
  );
}